[{"content":"最近完成了 C 指针的初步学习，通过这篇博客记录一下\n作为C中一个十分重要的概念，指针在C中的应用实例可谓俯拾皆是。\n通过指针，可以简化一些 C 编程任务的执行，还有一些任务，如动态内存分配，没有指针是无法执行的。\n一个 C 指针实例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include\u0026lt;stdio.h\u0026gt; int main() { int var_virtual=101; int *ptr=\u0026amp;var_virtual; //定义指针变量 printf(\u0026#34;var_virtual的变量地址：%p\\n\u0026#34;,ptr); printf(\u0026#34;var_virtual的变量地址：%#p\\n\u0026#34;,ptr); /* printf可以使用使用格式控制串“%o”、“%X”分别输出八进制整数和十六进制整数，并使用修饰符“#”控制前导显示*/ return 0; } 当上面这段代码被编译并执行后，会产生以下结果：\n1 2 var_virtual的变量地址：000000000061FE14 var_virtual的变量地址：0X000000000061FE14 通过上面的实例，我们可以得到以下两点结论；\n1\u0026gt;变量 ptr 是一个指针变量，在上述实例中用于储存变量 var_virtual 的地址。\n2\u0026gt;每一个变量都有一个内存位置，每一个内存位置都定义了可使用 \u0026amp; 运算符访问的地址，它表示 了在内存中的一个地址。\n在了解了内存地址的简单概念以及如何访问它后，我们便可以开始了解指针的概念了。\n指针的概念 在计算机科学中，指针（Pointer）是编程语言中的一个对象，利用地址，它的值直接指向 （points to）存在电脑存储器中另一个地方的值。由于通过地址能找到所需的变量单元，可以说，地址指向该变量单元。因此，将地址形象化的称为“指针”。意思是通过它能找到以它为地址的内存单元。\n简单来说，指针其实就是内存地址，指针变量就是用于存放内存地址的变量。因此指针常用于内存地址的传递和变量的访问。\n与其他变量相同，在使用指针变量前需要对其进行声明，声明方法如下：\n1 type *var_name; 其中 type 是变量类型，var_name 是变量名，* 是一个操作符，我们称它为解引用操作符，在后面的内容中我们还会再提到它。\n下面是一些指针变量的有效声明案例：\n1 2 3 4 int *ip; //整型指针 float *fp; //浮点型指针 double *dp; //双精度浮点型指针 char *ch; //字符指针 实际数据类型丰富多样，但是它们的所对应的指针的值的类型都是一样的，都是一个代表内存地址的长的十六进制无符号整数。不同数据类型的指针之间唯一的不同是，指针所指向的变量或常量的数据类型不同。\n那么区分不同类型的指针变量的意义是什么呢？\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include\u0026lt;stdio.h\u0026gt; int main() { int n=5; int *ip=\u0026amp;n; char *ch=(char*)\u0026amp;n; printf(\u0026#34;%#p\\n\u0026#34;,\u0026amp;n); printf(\u0026#34;%#p\\n\u0026#34;,ip); printf(\u0026#34;%#p\\n\u0026#34;,ip+1); printf(\u0026#34;%#p\\n\u0026#34;,ch); printf(\u0026#34;%#p\\n\u0026#34;,ch+1); return 0; } 当上面这段代码被编译并执行后，会产生以下结果：\n1 2 3 4 5 0X000000000061FE0C 0X000000000061FE0C 0X000000000061FE10 0X000000000061FE0C 0X000000000061FE0D 从上面这个实例可以看出，给 int 类型和 char 类型指针变量的值分别加一后，int 类型的内存地址的值被加上了四，而 char 类型的地址值只加上了一。\n简单来说，指针的类型决定了指针向前或者向后走一步有多大（距离）。\n同时，我们还可以由此引申出一个新的结论： 指针的类型决定了对指针解引用的时候有多大的权限（能操作几个字节）。 比如：char* 的指针解引用就只能访问一个字节，而int* 的指针的解引用就能访问四个字节。这个结论可以通过在对下面这段代码进行调试时进行内存监视得到证明。\n1 2 3 4 5 6 7 8 9 10 11 12 #include\u0026lt;stdio.h\u0026gt; int main() { int var=5; int *ip=\u0026amp;var; char *ch=(char*)\u0026amp;var; *ip=0; *ch=0; return 0; } 在调试过程中，注意在对 ip 和 ch 这两个指针变量进行解引用操作时观察内存监视窗口的变化\n需要额外注意的是，在不同的编程语言和平台上，指针的大小可能会有所不同，但通常在32位系统上是4字节，在64位系统上是8字节。\n指针的使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 #include\u0026lt;stdio.h\u0026gt; int main() { int var=5; //声明实际变量 int *ptr=\u0026amp;var; //声明指针变量并使用var的地址初始化 printf(\u0026#34;var的地址：%#p\\n\u0026#34;,\u0026amp;var); /*使用\u0026amp;操作符返回变量的地址*/ printf(\u0026#34;ptr储存的地址：%#p\\n\u0026#34;,ptr); /*打印指针变量储存的地址*/ printf(\u0026#34;*ptr指向的值：%d\\n\u0026#34;,*ptr); /*使用指针访问变量的值*/ return 0; } 当上面这段代码被编译并执行后，会产生以下结果：\n1 2 3 var的地址：0X000000000061FE14 ptr储存的地址：0X000000000061FE14 *ptr指向的值：5 上面的实例涉及了以下这些操作：定义一个指针变量、把变量地址赋值给指针、访问指针变量中可用地址的值。在使用指针时我们会频繁进行这些操作。\nNULL （空指针） NULL 指针是一个定义在标准库中的值为零的常量。\n1 2 3 4 5 6 7 8 9 10 #include\u0026lt;stdio.h\u0026gt; int main() { int *ptr=NULL; printf(\u0026#34;NULL 的地址：%#p\u0026#34;,ptr); //printf(\u0026#34;%d\\n\u0026#34;,*ptr); return 0; } 当上面这段代码被编译并执行后，会产生以下结果：\n1 NULL 的地址：0000000000000000 在大多数的操作系统上，程序不允许访问地址为 0 的内存，因为该内存是操作系统保留的。然而，内存地址 0 有特别重要的意义，它表明该指针不指向一个可访问的内存位置，因此，上面代码中注释掉的部分是错误的，取消注释后编译会报错 “Segmentation fault（段错误）” 。按照惯例，如果指针包含空值（零值），则假定它不指向任何东西。\n介于 NULL 的特殊性，我们会经常用到以下代码用于检测一个指针是否为 NULL ：\n1 2 3 4 5 6 7 if(ptr){ /*expression*/ //ptr不为 NULL ，进入语句 } if(!ptr){ /*expression*/ //ptr为 NULL ，进入语句 } 野指针 顾名思义，是一个野生的指针 是指向位置不确定的指针变量，其值是内存中的随机地址，指向内存中的随机值，所以野指针具有不确定性————对其解引用就是访问一个不确定的地址，所以其结果是不可知的，可以是内存中的任何值。\n野指针通常由以下三种情况产生：\n1\u0026gt;未初始化指针变量\n1 int *ptr; //ptr未初始化，默认为随机值 2\u0026gt;指针越界访问\n1 2 3 4 5 6 7 8 9 10 11 12 #include\u0026lt;stdio.h\u0026gt; int main() { int arr[5]={0}; int *ptr=arr; for(int i=0;i\u0026lt;=5;i++){ printf(\u0026#34;%d \u0026#34;,*(ptr++)); /*解引用过程中指针指向的范围超出数组arr的初始化范围*/ } return 0; } 当上面这段代码被编译并执行后，会产生以下结果：\n1 0 0 0 0 0 5 其中第六个元素“5”是内存中的随机值，是越界访问的结果。\n3\u0026gt; 指针指向的空间释放后未被设置成空指针\n这属于动态内存模块的内容，详情后续会提到\n由于其不确定性，野指针在程序中通常会引发一些意想不到的结果，甚至导致程序崩溃。因此，养成良好的编程习惯，规避野指针的产生就显得尤为重要。\n以下是一些规避野指针的方法：\n1.在声明指针变量时立即初始化它，或者将其初始化为NULL\n2.避免指针的越界访问\n3.在释放动态分配的内存后，将指针变量设置为NULL\n4.在使用指针变量之前，确保它指向一个有效的内存地址，即检查指针的有效性\nEND ","date":"2024-10-08T16:43:48+08:00","permalink":"https://Benjamin101V.github.io/p/c-%E6%8C%87%E9%92%88%E5%88%9D%E9%98%B6/","title":"C 指针初阶"},{"content":"\n动图来源：Hello Apple by Meritt Thomas\n","date":"2024-10-07T23:01:24+08:00","permalink":"https://Benjamin101V.github.io/p/hello/","title":"Hello"},{"content":"Hello World ","date":"2024-10-07T20:55:20+08:00","permalink":"https://Benjamin101V.github.io/p/myfirstblog/","title":"MyFirstBlog"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://Benjamin101V.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu4699868770670889127.jpg","permalink":"https://Benjamin101V.github.io/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://Benjamin101V.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://Benjamin101V.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://Benjamin101V.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://Benjamin101V.github.io/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://Benjamin101V.github.io/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://Benjamin101V.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://Benjamin101V.github.io/p/emoji-support/","title":"Emoji Support"}]